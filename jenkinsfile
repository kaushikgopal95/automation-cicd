pipeline {
  agent any
  
  environment {
    STAGING_URL = 'https://stag-plantbot.netlify.app'
    PRODUCTION_URL = 'https://prod-plantbot.netlify.app/'
    BUILD_TIMESTAMP = "${new Date().format('yyyyMMdd-HHmmss')}"
  }
  
  options {
    timeout(time: 30, unit: 'MINUTES')
    retry(1)
    timestamps()
  }
  
  stages {
    // stage('Deploy to Staging') {
    //   steps {
    //     script {
    //       // Trigger Netlify deployment using the build hook
    //       bat 'curl -X POST -d {} "https://api.netlify.com/build_hooks/68b18e4052945d72b87627f4"'
          
    //       echo "Netlify staging deployment triggered"
    //     }
    //   }
    // }
    
    stage('Wait for Staging Deployment') {
      steps {
        script {
          // Wait for staging deployment to be ready
          bat "node scripts/wait-for-healthy.js %STAGING_URL% 300"
          
          echo "Staging deployment completed and healthy"
        }
      }
    }
    
    stage('Run Cypress Tests on Staging') {
      steps {
        script {
          // Install dependencies first
          bat 'npm install'
          
          // Run Cypress tests against the live staging URL
          bat "set CYPRESS_BASE_URL=%STAGING_URL% && npx cypress run"
        }
      }
      post {
        always {
          // Archive Cypress artifacts if they exist
          script {
            try {
              archiveArtifacts artifacts: 'cypress/videos/**/*,cypress/screenshots/**/*', allowEmptyArchive: true
            } catch (Exception e) {
              echo "No Cypress artifacts found to archive: ${e.getMessage()}"
            }
          }
        }
      }
    }
    
    stage('Promote to Main Branch') {
      when {
        expression { currentBuild.result == 'SUCCESS' }
      }
      steps {
        script {
          // Configure Git credentials
          withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
            // Set Git configuration
            bat 'git config --global user.email "%GIT_USERNAME%@github.com"'
            bat 'git config --global user.name "%GIT_USERNAME%"'
            
            // Checkout main branch and merge staging
            bat 'git checkout main'
            bat 'git pull origin main'
            bat 'git merge origin/staging'
            bat 'git push origin main'
            
            echo "Successfully promoted staging branch to main"
          }
        }
      }
    }
    
    stage('Wait for Production Deployment') {
      when {
        expression { currentBuild.result == 'SUCCESS' }
      }
      steps {
        script {
          // Wait for production deployment to be ready

          // Trigger Netlify production deployment
          
          bat 'curl -X POST -d {} "https://api.netlify.com/build_hooks/68b68850a4e373ee7b86e5fb"'
          
          bat "node scripts/wait-for-healthy.js %PRODUCTION_URL% 300"
          
          echo "Production deployment completed and healthy"
        }
      }
      post {
        success {
          echo "Production deployment successful! Pipeline completed successfully."
        }
      }
    }
  }
}